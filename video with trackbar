#include"opencv2/highgui/highgui.hpp"
#include"opencv2/imgproc/imgproc.hpp"
#include<iostream>
#include<fstream>
using namespace std;
using namespace cv;
int g_slider_position = 0;//滑动条位置
int g_run = 1, g_dontset = 0;
VideoCapture g_cap;
void onTrackbarSlide(int pos, void*) {
	g_cap.set(CAP_PROP_POS_FRAMES, pos);
	if (!g_dontset)
		g_run = 1;
	g_dontset = 0;
}
int main() {
	cv::namedWindow("Example2_4", WINDOW_AUTOSIZE);//创建一个窗口
	g_cap.open("2.avi");//打开视频文件
	int frames = (int)g_cap.get(CAP_PROP_FRAME_COUNT);//获取视频文件帧数
	int tmph = (int)g_cap.get(CAP_PROP_FRAME_HEIGHT);//获取视频文件高度
	int tmpw = (int)g_cap.get(CAP_PROP_FRAME_WIDTH);//获取视频文件宽度
	cout << "video has" << frames << "frames of dimensions(" << tmpw << "," << tmph << ")." << endl;
	createTrackbar("trackbar", "Example2_4", &g_slider_position, frames, onTrackbarSlide);
	Mat frame;
	for (;;) {
		if (g_run != 0) {
			g_cap >> frame; if (frame.empty())break;
			int current_pos = (int)g_cap.get(CAP_PROP_POS_FRAMES);
			g_dontset = 1;
			setTrackbarPos("trackbar", "Example2_4", current_pos);
			imshow("Example2_4", frame);
      		g_run -= 1;
		
		}
		char c = (char)waitKey(10);
		if (c == 's') {
			g_run = 1; cout << "single step,run=" << g_run << endl;
		}
		if (c == 'r') { g_run = -1; cout << "Run mode,run=" << g_run << endl; }
		if (c == 27)break;

	}
	return 0;
}
